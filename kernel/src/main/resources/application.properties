# tomcat服务端口
server.port=9999
# log4j2配置文件路径
spring.logging.config=classpath:log4j2.xml

# 数据源1
spring.datasource.dynamic.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.dynamic.datasource.first.driverClassName=com.mysql.jdbc.Driver
spring.datasource.dynamic.datasource.first.url=jdbc:mysql://localhost:3306/test1?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC
spring.datasource.dynamic.datasource.first.username=root
spring.datasource.dynamic.datasource.first.password=12345678
spring.datasource.dynamic.datasource.second.driverClassName=com.mysql.jdbc.Driver
spring.datasource.dynamic.datasource.second.url=jdbc:mysql://localhost:3306/test2?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC
spring.datasource.dynamic.datasource.second.username=root
spring.datasource.dynamic.datasource.second.password=12345678

# Druid连接池监控配置
# 初始化大小，最小，最大
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=10
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 每60秒运行一次空闲连接回收器
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000

# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
# 配置一个连接在池中最大生存的时间，单位是毫秒
spring.datasource.druid.maxEvictableIdleTimeMillis=900000

spring.datasource.druid.rewriteBatchedStatements=true
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
# 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
spring.datasource.druid.testWhileIdle=true
# 建议配置为false。获取连接时执行validationQuery检测连接是否有效，这个配置会降低性能
spring.datasource.druid.testOnBorrow=false
# 建议配置为false。获取连接时执行validationQuery检测连接是否有效，这个配置会降低性能
spring.datasource.druid.testOnReturn=false
# 是否开启监控
spring.datasource.druid.webStatFilter.enabled=true
# 设置白名单，不填则允许所有访问
spring.datasource.druid.statViewServlet.enabled=true
spring.datasource.druid.statViewServlet.allow=
# 监控路径
spring.datasource.druid.statViewServlet.url-pattern=/druid/*
# 控制台管理用户名和密码
spring.datasource.druid.statViewServlet.login-username=admin
spring.datasource.druid.statViewServlet.login-password=123456
# 开启DruidDataSource状态监控
spring.datasource.druid.filter.stat.enabled=true
# 开启慢SQL记录功能,启用后如果遇到执行很慢的 SQL，便会输出到日志中
spring.datasource.druid.filter.stat.log-slow-sql=true
# 默认3000毫秒，这里超过1s，就是慢，记录到日志
spring.datasource.druid.filter.stat.slow-sql-millis=1000
spring.datasource.druid.filter.stat.merge-sql=true
# 防御SQL注入
spring.datasource.druid.filter.wall.config.multi-statement-allow=true

# xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
mybatis-plus.mapper-locations=classpath:mappers/**/*.xml
#IdType.AUTO：数据库自增，需要数据库支持自增长特性。
#IdType.NONE：未设置主键生成策略，需要开发者手动设置ID。
#IdType.ASSIGN_ID：使用雪花算法生成主键，适用于分布式系统，跨服务器部署。
#IdType.ASSIGN_UUID：使用Java UUID生成主键。
mybatis-plus.global-config.db-config.id-type=ASSIGN_ID
# 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
mybatis-plus.configuration.map-underscore-to-camel-case=true
# 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
mybatis-plus.configuration.call-setters-on-nulls=true
# 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl


